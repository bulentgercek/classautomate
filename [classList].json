{
	"classautomate":{
		"description": "ClassAutoMate Class/Function Listesi",
		
		"Genel":[
			"ArrayCache::classCache() -> @return object",
			"ArrayCache::classCache() -> @return object",
			"ArrayCache->method($method) -> @param string $method, @return array $result",
			"ArrayCache->getCache() -> @return static array $this->_cache",

			"Db::classCache() -> @return object",
			"Db->connect($dbName) -> @param classautomate veya herhangibir okul adi",
			"Db->getSchoolDb($dbName) -> @param herhangibir okul adi",
			"Db->selectSql($intend) -> @param array",
			"Db->askConnection() -> @return Database baglantisi ismi veya false",
			"Db->close()",
			"Db->setSql($sql) -> @param Database sorgusu",
			"Db->getRows($format = 'fieldbase') -> @param string 'fieldbase', 'nobase', 'rowbase', @return Array Database sorgusu satirlari",
			"Db->getRowCount() -> @return Database sorgusu satir sayisi",
			"Db->getColumns() -> @return Array Database sorgusu sutunlari",
			"Db->getColumnCount() -> @return Database sorgusu sutun sayisi",
			"CommonDb::getFromDbArray($readResult,$intend) -> @return array",
			"CommonDb::addToDb() -> @return array",
			"CommonDb::updateToDb() -> @return array",
			"CommonDb::deleteFromDb() -> @return array",
			"CommonDb::readTableFromDb($intend,$arrayFormat) -> @return array",
				
			"Setting::classCache() -> @return object",
			"Setting->getLanguage($langStorage) -> @param 'browser' veya 'db'",
			"Setting->getInterfaceLang() -> @return static array(self::$interfaceLang)",
			"Setting->setInterfaceLang($langStorage) @param 'browser' veya 'db'",
			"Setting->read() -> @return array okulun setting tablosu",
			"Setting->getTimer() -> @return string",
			"Setting->get_companyname -> @return string",
				
			"Session::classCache() -> @return object",
			"Session->start()",
			"Session->destroy() -> self::SESSION_END_URL'e yonlendirme",
			"Session->setTimeZone($offsetValue) -> @param kullanicinin lokal saat farki",
			"Session->getTimeZone() -> @return $_SESSION['timeZone']",
			"Session->setSessionTimer($limit) -> @param Saniye cinsinden session-timeout limiti",
			"Session->setCookieTimer($limit) -> @param Saniye cinsinden cookie-timeout limiti",
			"Session->set($name, $value) -> @param Session ismi, @param Session icerigi",
			"Session->get($name) -> @param Session ismi",
			"Session->setCookie($name, $value) -> @param cookie ismi, @param cookie icerigi",
			"Session->getCookie($name) -> @param cookie ismi",
			
			"Tab->getTabs() -> @return array",
			"Tab->setTabsDoCommands()",
			"Tab->checkVars() -> @return boolean",
			"Tab->checkSetActiveTab()",
			"Tab->getCurrentTab() -> @return string",
			"Tab->setActionList($actionKey,$actionValue) -> @return array",
			"Tab->getActionList() -> @return array",
			"Tab->getFormAction() -> @return string",
			
			"Login::classCache() -> @return object",
			"Login->check($loginUsername, $loginPassword) -> @param Formdan gelen kullanici adi, @param Formdan gelen sifre",
			"Login->setLoginHistory() -> @return void",
			"Login->setSessionVars()-> @return array",
			"Login->setCookieVars() -> @return array",
			
			"GlobalVar::set($var,$value='') -> @param array,string $var, @param string $value",
			"GlobalVar::get($var='') -> @param array,string $var, @return array,string",
			
			"MakeList->set()",
			"MakeList->selectConvert($array) -> @return array",
			"MakeList->splitFormat($formatString) -> @return array",
			"MakeList->get() -> @return array",
			"MakeList->getDbFormat($dbValue) -> @return string",
			"MakeList->setItemValues($listTable,$listColumn,$itemNo)",
			"MakeList->getConnection($column,$columnValue,$columnSubValue) -> @return string",
			"MakeList->getConnectDay($day) -> @return string",
			"MakeList->setLength($value,$lengthType) -> @return string",
			
			"Execute->setCommand($command) -> @param string $command"
		],
		
		"Classroom":[
			"Classroom->get()",
			"Classroom->add()",
			"Classroom->update()",
			"Classroom->delete()",
			"Classroom->getStudents($code)"
		],

		"Holiday":[
		],

		"Accountant":[
		],

		"Person":[
			"Person->get() -> @return array",
			"Person->add($type) -> @param string",
			"Person->update()",
			"Person->delete()",
			"Person->formImplement($columnName) -> @param $columnName string, @return string",
			"Person->getNewCode() -> @return int"
		],
		
		"Program":[
		],

		"Rollcall":[
		],
		
		"Saloon":[
		],
		
		"History":[
			"History->read()",
			"History->add($intend) -> @param database array",
			"History->getLastProcess() -> @return array"
		],

		"Start Functions":[
			"alert($value = 'classautomate.com Â©2011') -> @return echo String",
			"setPageAreas($pages) -> @param sayfa alanlarinin ismi, @return sayfa alanlarini .php olarak yukle, alan isimlerini array dondur",
			"setSmartyVars($smarty_object, $xml_object, $xml_header) -> @param Smarty objesi, @param XML Array, @param XML icindeki baslik",
			"setExtSmartyVars($var, $value) -> @param Ekstra Smarty degiskeni adi, @param Extra Smarty degiskeni icerigi",
			"setSmartyFolders($smartyObject)",
			"getAppList() -> @return array",
			"getScriptName() -> @return Calisan scriptin adi",
			"setRefresh($state)",
			"getRefresh() -> @return boolean",
			"get_client_ip() -> @return ip numarasi",
			"getClientDatetime($format = '%Y-%m-%d / %H:%M:%S') -> @param Istenen Tarih/Saat string formati, @return string sonucu",
			"md5Converter($string) -> @param string Md5'e cevirilecek string degeri",
			"genNumber($values = '100000,999999') -> @param string Virgul ile ayrilmis random sayi araligi, default degeri 100.000 > 999.999",
			"merge2List($arrayList1,$arrayList2) -> @return array"
		]
	}
}
